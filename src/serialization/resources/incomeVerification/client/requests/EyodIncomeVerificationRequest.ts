/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Belvo from "../../../../../api";
import * as core from "../../../../../core";

export const EyodIncomeVerificationRequest: core.serialization.Schema<
    serializers.EyodIncomeVerificationRequest.Raw,
    Belvo.EyodIncomeVerificationRequest
> = core.serialization.object({
    language: core.serialization.string(),
    transactions: core.serialization.list(
        core.serialization.lazyObject(async () => (await import("../../../..")).EyodIncomeVerificationBodyRequest)
    ),
    dateFrom: core.serialization.property("date_from", core.serialization.string().optional()),
    dateTo: core.serialization.property("date_to", core.serialization.string().optional()),
    allowedIncomeTypes: core.serialization.property(
        "allowed_income_types",
        core.serialization
            .list(
                core.serialization.lazy(async () => (await import("../../../..")).EnumInvoiceAllowedIncomeTypesRequest)
            )
            .optional()
    ),
    minimumConfidenceLevel: core.serialization.property(
        "minimum_confidence_level",
        core.serialization
            .lazy(async () => (await import("../../../..")).EnumIncomeMinimumConfidenceLevelRequest)
            .optional()
    ),
});

export declare namespace EyodIncomeVerificationRequest {
    interface Raw {
        language: string;
        transactions: serializers.EyodIncomeVerificationBodyRequest.Raw[];
        date_from?: string | null;
        date_to?: string | null;
        allowed_income_types?: serializers.EnumInvoiceAllowedIncomeTypesRequest.Raw[] | null;
        minimum_confidence_level?: serializers.EnumIncomeMinimumConfidenceLevelRequest.Raw | null;
    }
}
