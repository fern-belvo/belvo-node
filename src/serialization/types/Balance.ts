/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Belvo from "../../api";
import * as core from "../../core";

export const Balance: core.serialization.ObjectSchema<serializers.Balance.Raw, Belvo.Balance> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        account: core.serialization.lazyObject(async () => (await import("..")).Account).optional(),
        valueDate: core.serialization.property("value_date", core.serialization.string().optional()),
        balance: core.serialization.number().optional(),
        currentBalance: core.serialization.property("current_balance", core.serialization.number().optional()),
        statement: core.serialization.string().optional(),
        collectedAt: core.serialization.property("collected_at", core.serialization.string().optional()),
    });

export declare namespace Balance {
    interface Raw {
        id?: string | null;
        account?: serializers.Account.Raw | null;
        value_date?: string | null;
        balance?: number | null;
        current_balance?: number | null;
        statement?: string | null;
        collected_at?: string | null;
    }
}
