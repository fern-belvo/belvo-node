/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as BelvoApi from "../../api";
import * as core from "../../core";

export const BankAccountBusinessPse: core.serialization.ObjectSchema<
    serializers.BankAccountBusinessPse.Raw,
    BelvoApi.BankAccountBusinessPse
> = core.serialization.object({
    id: core.serialization.string(),
    createdAt: core.serialization.property("created_at", core.serialization.string()),
    createdBy: core.serialization.property("created_by", core.serialization.string()),
    customer: core.serialization.string().optional(),
    institution: core.serialization.string().optional(),
    number: core.serialization.string(),
    holder: core.serialization.lazyObject(async () => (await import("..")).HolderBusinessResponsePse),
    details: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
});

export declare namespace BankAccountBusinessPse {
    interface Raw {
        id: string;
        created_at: string;
        created_by: string;
        customer?: string | null;
        institution?: string | null;
        number: string;
        holder: serializers.HolderBusinessResponsePse.Raw;
        details: Record<string, unknown>;
        metadata?: Record<string, unknown> | null;
    }
}
