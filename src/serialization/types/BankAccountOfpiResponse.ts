/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Belvo from "../../api";
import * as core from "../../core";

export const BankAccountOfpiResponse: core.serialization.ObjectSchema<
    serializers.BankAccountOfpiResponse.Raw,
    Belvo.BankAccountOfpiResponse
> = core.serialization.object({
    id: core.serialization.string(),
    createdAt: core.serialization.property("created_at", core.serialization.string()),
    createdBy: core.serialization.property("created_by", core.serialization.string()),
    customer: core.serialization.string().optional(),
    institution: core.serialization.string().optional(),
    details: core.serialization.lazy(async () => (await import("..")).BankAccountOfpiResponseDetails),
    holder: core.serialization.lazyObject(async () => (await import("..")).HolderResponseOfpi),
});

export declare namespace BankAccountOfpiResponse {
    interface Raw {
        id: string;
        created_at: string;
        created_by: string;
        customer?: string | null;
        institution?: string | null;
        details: serializers.BankAccountOfpiResponseDetails.Raw;
        holder: serializers.HolderResponseOfpi.Raw;
    }
}
