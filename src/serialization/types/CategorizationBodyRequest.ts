/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Belvo from "../../api";
import * as core from "../../core";

export const CategorizationBodyRequest: core.serialization.ObjectSchema<
    serializers.CategorizationBodyRequest.Raw,
    Belvo.CategorizationBodyRequest
> = core.serialization.object({
    transactionId: core.serialization.property("transaction_id", core.serialization.string()),
    accountHolderType: core.serialization.property(
        "account_holder_type",
        core.serialization.lazy(async () => (await import("..")).EnumCategorizationAccountHolderType)
    ),
    accountHolderId: core.serialization.property("account_holder_id", core.serialization.string()),
    accountId: core.serialization.property("account_id", core.serialization.string()),
    accountCategory: core.serialization.property(
        "account_category",
        core.serialization.lazy(async () => (await import("..")).EnumCategorizationAccountCategory)
    ),
    valueDate: core.serialization.property("value_date", core.serialization.string()),
    description: core.serialization.string(),
    type: core.serialization.lazy(async () => (await import("..")).EnumCategorizationTransactionType),
    amount: core.serialization.number(),
    currency: core.serialization.string(),
    institution: core.serialization.string(),
    mcc: core.serialization.number().optional(),
});

export declare namespace CategorizationBodyRequest {
    interface Raw {
        transaction_id: string;
        account_holder_type: serializers.EnumCategorizationAccountHolderType.Raw;
        account_holder_id: string;
        account_id: string;
        account_category: serializers.EnumCategorizationAccountCategory.Raw;
        value_date: string;
        description: string;
        type: serializers.EnumCategorizationTransactionType.Raw;
        amount: number;
        currency: string;
        institution: string;
        mcc?: number | null;
    }
}
