/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as BelvoApi from "../../api";
import * as core from "../../core";

export const DisplayConfirmationRequiredOfpi: core.serialization.ObjectSchema<
    serializers.DisplayConfirmationRequiredOfpi.Raw,
    BelvoApi.DisplayConfirmationRequiredOfpi
> = core.serialization.object({
    beneficiaryBankAccount: core.serialization.property(
        "beneficiary_bank_account",
        core.serialization.lazyObject(async () => (await import("..")).BeneficiaryBankAccountOfpi).optional()
    ),
    payerName: core.serialization.property("payer_name", core.serialization.string().optional()),
    payerIdentifier: core.serialization.property("payer_identifier", core.serialization.string().optional()),
    payerInstitution: core.serialization.property(
        "payer_institution",
        core.serialization.lazyObject(async () => (await import("..")).PaymentInstitution).optional()
    ),
});

export declare namespace DisplayConfirmationRequiredOfpi {
    interface Raw {
        beneficiary_bank_account?: serializers.BeneficiaryBankAccountOfpi.Raw | null;
        payer_name?: string | null;
        payer_identifier?: string | null;
        payer_institution?: serializers.PaymentInstitution.Raw | null;
    }
}
