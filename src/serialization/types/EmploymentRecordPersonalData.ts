/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Belvo from "../../api";
import * as core from "../../core";

export const EmploymentRecordPersonalData: core.serialization.ObjectSchema<
    serializers.EmploymentRecordPersonalData.Raw,
    Belvo.EmploymentRecordPersonalData
> = core.serialization.object({
    officialName: core.serialization.property("official_name", core.serialization.string().optional()),
    firstName: core.serialization.property("first_name", core.serialization.string().optional()),
    lastName: core.serialization.property("last_name", core.serialization.string().optional()),
    email: core.serialization.string().optional(),
    birthDate: core.serialization.property("birth_date", core.serialization.string().optional()),
    entitlements: core.serialization
        .lazyObject(async () => (await import("..")).EmploymentRecordEntitlement)
        .optional(),
    documentIds: core.serialization.property(
        "document_ids",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).EmploymentRecordDocumentId))
            .optional()
    ),
});

export declare namespace EmploymentRecordPersonalData {
    interface Raw {
        official_name?: string | null;
        first_name?: string | null;
        last_name?: string | null;
        email?: string | null;
        birth_date?: string | null;
        entitlements?: serializers.EmploymentRecordEntitlement.Raw | null;
        document_ids?: serializers.EmploymentRecordDocumentId.Raw[] | null;
    }
}
