/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Belvo from "../../api";
import * as core from "../../core";

export const IncomeStreamsBody: core.serialization.ObjectSchema<
    serializers.IncomeStreamsBody.Raw,
    Belvo.IncomeStreamsBody
> = core.serialization.object({
    accountId: core.serialization.property("account_id", core.serialization.string()),
    incomeType: core.serialization.property(
        "income_type",
        core.serialization.lazy(async () => (await import("..")).EnumIncomeStreamType)
    ),
    frequency: core.serialization.lazy(async () => (await import("..")).EnumIncomeStreamFrequency),
    monthlyAverage: core.serialization.property("monthly_average", core.serialization.number()),
    averageIncomeAmount: core.serialization.property("average_income_amount", core.serialization.number()),
    lastIncomeAmount: core.serialization.property("last_income_amount", core.serialization.number()),
    currency: core.serialization.string(),
    lastIncomeDescription: core.serialization.property("last_income_description", core.serialization.unknown()),
    lastIncomeDate: core.serialization.property("last_income_date", core.serialization.string()),
    stability: core.serialization.number().optional(),
    regularity: core.serialization.number().optional(),
    trend: core.serialization.number().optional(),
    lookbackPeriods: core.serialization.property("lookback_periods", core.serialization.number()),
    fullPeriods: core.serialization.property("full_periods", core.serialization.number()),
    periodsWithIncome: core.serialization.property("periods_with_income", core.serialization.number()),
    numberOfIncomes: core.serialization.property("number_of_incomes", core.serialization.number()),
    confidence: core.serialization.lazy(async () => (await import("..")).EnumIncomeStreamConfidence),
});

export declare namespace IncomeStreamsBody {
    interface Raw {
        account_id: string;
        income_type: serializers.EnumIncomeStreamType.Raw;
        frequency: serializers.EnumIncomeStreamFrequency.Raw;
        monthly_average: number;
        average_income_amount: number;
        last_income_amount: number;
        currency: string;
        last_income_description?: unknown;
        last_income_date: string;
        stability?: number | null;
        regularity?: number | null;
        trend?: number | null;
        lookback_periods: number;
        full_periods: number;
        periods_with_income: number;
        number_of_incomes: number;
        confidence: serializers.EnumIncomeStreamConfidence.Raw;
    }
}
