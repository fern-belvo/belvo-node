/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Belvo from "../../api";
import * as core from "../../core";

export const Institution: core.serialization.ObjectSchema<serializers.Institution.Raw, Belvo.Institution> =
    core.serialization.object({
        id: core.serialization.number().optional(),
        name: core.serialization.string().optional(),
        type: core.serialization.lazy(async () => (await import("..")).EnumInstitutionType).optional(),
        website: core.serialization.string().optional(),
        displayName: core.serialization.property("display_name", core.serialization.string().optional()),
        countryCodes: core.serialization.property(
            "country_codes",
            core.serialization.list(core.serialization.string()).optional()
        ),
        primaryColor: core.serialization.property("primary_color", core.serialization.string().optional()),
        logo: core.serialization.string().optional(),
        iconLogo: core.serialization.property("icon_logo", core.serialization.string().optional()),
        textLogo: core.serialization.property("text_logo", core.serialization.string().optional()),
        formFields: core.serialization.property(
            "form_fields",
            core.serialization
                .list(core.serialization.lazyObject(async () => (await import("..")).InstitutionsFormField))
                .optional()
        ),
        features: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).InstitutionsFeature))
            .optional(),
        resources: core.serialization.list(core.serialization.string()).optional(),
        integrationType: core.serialization.property(
            "integration_type",
            core.serialization.lazy(async () => (await import("..")).EnumInstitutionIntegrationType).optional()
        ),
        status: core.serialization.lazy(async () => (await import("..")).EnumInstitutionStatus).optional(),
    });

export declare namespace Institution {
    interface Raw {
        id?: number | null;
        name?: string | null;
        type?: serializers.EnumInstitutionType.Raw | null;
        website?: string | null;
        display_name?: string | null;
        country_codes?: string[] | null;
        primary_color?: string | null;
        logo?: string | null;
        icon_logo?: string | null;
        text_logo?: string | null;
        form_fields?: serializers.InstitutionsFormField.Raw[] | null;
        features?: serializers.InstitutionsFeature.Raw[] | null;
        resources?: string[] | null;
        integration_type?: serializers.EnumInstitutionIntegrationType.Raw | null;
        status?: serializers.EnumInstitutionStatus.Raw | null;
    }
}
