/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as BelvoApi from "../../api";
import * as core from "../../core";

export const InvestmentsPortfolioInstrument: core.serialization.ObjectSchema<
    serializers.InvestmentsPortfolioInstrument.Raw,
    BelvoApi.InvestmentsPortfolioInstrument
> = core.serialization.object({
    id: core.serialization.string().optional(),
    publicId: core.serialization.property(
        "public_id",
        core.serialization
            .list(
                core.serialization.lazyObject(async () => (await import("..")).InvestmentsPortfolioInstrumentPublicId)
            )
            .optional()
    ),
    type: core.serialization.lazy(async () => (await import("..")).EnumInvestmentPortfolioInstrumentType),
    subtype: core.serialization.string().optional(),
    name: core.serialization.string(),
    currency: core.serialization.string(),
    price: core.serialization.number().optional(),
    quantity: core.serialization.number().optional(),
    balanceGross: core.serialization.property("balance_gross", core.serialization.number().optional()),
    balanceNet: core.serialization.property("balance_net", core.serialization.number().optional()),
    averageAcquisitionPrice: core.serialization.property(
        "average_acquisition_price",
        core.serialization.number().optional()
    ),
    profit: core.serialization.number().optional(),
    openDate: core.serialization.property("open_date", core.serialization.string().optional()),
    redemptionConditions: core.serialization.property(
        "redemption_conditions",
        core.serialization
            .list(
                core.serialization.lazyObject(
                    async () => (await import("..")).InvestmentsPortfolioInstrumentRedemptionConditions
                )
            )
            .optional()
    ),
    fees: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("..")).InvestmentsPortfolioInstrumentFees))
        .optional(),
    interestRates: core.serialization.property(
        "interest_rates",
        core.serialization
            .list(
                core.serialization.lazyObject(
                    async () => (await import("..")).InvestmentsPortfolioInstrumentInterestRate
                )
            )
            .optional()
    ),
});

export declare namespace InvestmentsPortfolioInstrument {
    interface Raw {
        id?: string | null;
        public_id?: serializers.InvestmentsPortfolioInstrumentPublicId.Raw[] | null;
        type: serializers.EnumInvestmentPortfolioInstrumentType.Raw;
        subtype?: string | null;
        name: string;
        currency: string;
        price?: number | null;
        quantity?: number | null;
        balance_gross?: number | null;
        balance_net?: number | null;
        average_acquisition_price?: number | null;
        profit?: number | null;
        open_date?: string | null;
        redemption_conditions?: serializers.InvestmentsPortfolioInstrumentRedemptionConditions.Raw[] | null;
        fees?: serializers.InvestmentsPortfolioInstrumentFees.Raw[] | null;
        interest_rates?: serializers.InvestmentsPortfolioInstrumentInterestRate.Raw[] | null;
    }
}
