/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as BelvoApi from "../../api";
import * as core from "../../core";

export const InvoiceDetailSat: core.serialization.ObjectSchema<
    serializers.InvoiceDetailSat.Raw,
    BelvoApi.InvoiceDetailSat
> = core.serialization.object({
    description: core.serialization.string().optional(),
    productIdentification: core.serialization.property(
        "product_identification",
        core.serialization.string().optional()
    ),
    quantity: core.serialization.number().optional(),
    unitCode: core.serialization.property("unit_code", core.serialization.string().optional()),
    unitDescription: core.serialization.property("unit_description", core.serialization.string().optional()),
    unitAmount: core.serialization.property("unit_amount", core.serialization.number().optional()),
    taxType: core.serialization.property("tax_type", core.serialization.string().optional()),
    preTaxAmount: core.serialization.property("pre_tax_amount", core.serialization.number().optional()),
    taxPercentage: core.serialization.property("tax_percentage", core.serialization.number().optional()),
    taxAmount: core.serialization.property("tax_amount", core.serialization.number().optional()),
    totalAmount: core.serialization.property("total_amount", core.serialization.number().optional()),
    retainedTaxes: core.serialization.property(
        "retained_taxes",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).InvoiceDetailRetainedTaxSat))
            .optional()
    ),
    collectedAt: core.serialization.property("collected_at", core.serialization.string().optional()),
});

export declare namespace InvoiceDetailSat {
    interface Raw {
        description?: string | null;
        product_identification?: string | null;
        quantity?: number | null;
        unit_code?: string | null;
        unit_description?: string | null;
        unit_amount?: number | null;
        tax_type?: string | null;
        pre_tax_amount?: number | null;
        tax_percentage?: number | null;
        tax_amount?: number | null;
        total_amount?: number | null;
        retained_taxes?: serializers.InvoiceDetailRetainedTaxSat.Raw[] | null;
        collected_at?: string | null;
    }
}
