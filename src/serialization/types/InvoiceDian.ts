/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Belvo from "../../api";
import * as core from "../../core";

export const InvoiceDian: core.serialization.ObjectSchema<serializers.InvoiceDian.Raw, Belvo.InvoiceDian> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        link: core.serialization.string().optional(),
        collectedAt: core.serialization.property("collected_at", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        invoiceIdentification: core.serialization.property(
            "invoice_identification",
            core.serialization.string().optional()
        ),
        invoiceDate: core.serialization.property("invoice_date", core.serialization.string().optional()),
        status: core.serialization.string().optional(),
        expirationDate: core.serialization.property("expiration_date", core.serialization.string().optional()),
        invoiceType: core.serialization.property(
            "invoice_type",
            core.serialization.lazy(async () => (await import("..")).EnumInvoiceDianInvoiceType).optional()
        ),
        type: core.serialization.lazy(async () => (await import("..")).EnumInvoiceType).optional(),
        senderId: core.serialization.property("sender_id", core.serialization.string().optional()),
        senderName: core.serialization.property("sender_name", core.serialization.string().optional()),
        senderDetails: core.serialization.property(
            "sender_details",
            core.serialization.lazyObject(async () => (await import("..")).InvoiceSenderDetailsDian).optional()
        ),
        senderTaxFraudStatus: core.serialization.property(
            "sender_tax_fraud_status",
            core.serialization.string().optional()
        ),
        receiverId: core.serialization.property("receiver_id", core.serialization.string().optional()),
        receiverName: core.serialization.property("receiver_name", core.serialization.string().optional()),
        receiverDetails: core.serialization.property(
            "receiver_details",
            core.serialization.lazyObject(async () => (await import("..")).InvoicesReceiverDetailsDian).optional()
        ),
        receiverTaxFraudStatus: core.serialization.property(
            "receiver_tax_fraud_status",
            core.serialization.string().optional()
        ),
        cancelationStatus: core.serialization.property("cancelation_status", core.serialization.string().optional()),
        cancelationUpdateDate: core.serialization.property(
            "cancelation_update_date",
            core.serialization.string().optional()
        ),
        certificationDate: core.serialization.property("certification_date", core.serialization.string().optional()),
        certificationAuthority: core.serialization.property(
            "certification_authority",
            core.serialization.string().optional()
        ),
        paymentType: core.serialization.property("payment_type", core.serialization.string().optional()),
        paymentTypeDescription: core.serialization.property(
            "payment_type_description",
            core.serialization.string().optional()
        ),
        paymentMethod: core.serialization.property(
            "payment_method",
            core.serialization.lazy(async () => (await import("..")).EnumInvoiceDianPaymentMethod).optional()
        ),
        paymentMethodDescription: core.serialization.property(
            "payment_method_description",
            core.serialization.string().optional()
        ),
        usage: core.serialization.string().optional(),
        version: core.serialization.string().optional(),
        placeOfIssue: core.serialization.property("place_of_issue", core.serialization.string().optional()),
        invoiceDetails: core.serialization.property(
            "invoice_details",
            core.serialization.list(core.serialization.lazyObject(async () => (await import("..")).InvoiceDetailDian))
        ),
        currency: core.serialization.string().optional(),
        subtotalAmount: core.serialization.property("subtotal_amount", core.serialization.number().optional()),
        exchangeRate: core.serialization.property("exchange_rate", core.serialization.number().optional()),
        taxAmount: core.serialization.property("tax_amount", core.serialization.number().optional()),
        discountAmount: core.serialization.property("discount_amount", core.serialization.number().optional()),
        totalAmount: core.serialization.property("total_amount", core.serialization.number().optional()),
        payments: core.serialization.list(
            core.serialization.lazyObject(async () => (await import("..")).InvoicesPaymentsDian)
        ),
        payroll: core.serialization.lazyObject(async () => (await import("..")).InvoicesPayrollDian).optional(),
        folio: core.serialization.string().optional(),
        xml: core.serialization.string().optional(),
        warnings: core.serialization.lazyObject(async () => (await import("..")).InvoiceWarningsDian).optional(),
    });

export declare namespace InvoiceDian {
    interface Raw {
        id?: string | null;
        link?: string | null;
        collected_at?: string | null;
        created_at?: string | null;
        invoice_identification?: string | null;
        invoice_date?: string | null;
        status?: string | null;
        expiration_date?: string | null;
        invoice_type?: serializers.EnumInvoiceDianInvoiceType.Raw | null;
        type?: serializers.EnumInvoiceType.Raw | null;
        sender_id?: string | null;
        sender_name?: string | null;
        sender_details?: serializers.InvoiceSenderDetailsDian.Raw | null;
        sender_tax_fraud_status?: string | null;
        receiver_id?: string | null;
        receiver_name?: string | null;
        receiver_details?: serializers.InvoicesReceiverDetailsDian.Raw | null;
        receiver_tax_fraud_status?: string | null;
        cancelation_status?: string | null;
        cancelation_update_date?: string | null;
        certification_date?: string | null;
        certification_authority?: string | null;
        payment_type?: string | null;
        payment_type_description?: string | null;
        payment_method?: serializers.EnumInvoiceDianPaymentMethod.Raw | null;
        payment_method_description?: string | null;
        usage?: string | null;
        version?: string | null;
        place_of_issue?: string | null;
        invoice_details: serializers.InvoiceDetailDian.Raw[];
        currency?: string | null;
        subtotal_amount?: number | null;
        exchange_rate?: number | null;
        tax_amount?: number | null;
        discount_amount?: number | null;
        total_amount?: number | null;
        payments: serializers.InvoicesPaymentsDian.Raw[];
        payroll?: serializers.InvoicesPayrollDian.Raw | null;
        folio?: string | null;
        xml?: string | null;
        warnings?: serializers.InvoiceWarningsDian.Raw | null;
    }
}
