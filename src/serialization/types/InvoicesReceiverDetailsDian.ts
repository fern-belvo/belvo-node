/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as BelvoApi from "../../api";
import * as core from "../../core";

export const InvoicesReceiverDetailsDian: core.serialization.ObjectSchema<
    serializers.InvoicesReceiverDetailsDian.Raw,
    BelvoApi.InvoicesReceiverDetailsDian
> = core.serialization.object({
    collectedAt: core.serialization.property("collected_at", core.serialization.string().optional()),
    taxPayerType: core.serialization.property("tax_payer_type", core.serialization.string().optional()),
    regimen: core.serialization.string().optional(),
    taxScheme: core.serialization.property("tax_scheme", core.serialization.string().optional()),
    country: core.serialization.string().optional(),
    address: core.serialization.string().optional(),
    phoneNumber: core.serialization.property("phone_number", core.serialization.string().optional()),
    email: core.serialization.string().optional(),
});

export declare namespace InvoicesReceiverDetailsDian {
    interface Raw {
        collected_at?: string | null;
        tax_payer_type?: string | null;
        regimen?: string | null;
        tax_scheme?: string | null;
        country?: string | null;
        address?: string | null;
        phone_number?: string | null;
        email?: string | null;
    }
}
