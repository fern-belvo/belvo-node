/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Belvo from "../../api";
import * as core from "../../core";

export const NextStepDisplayPaymentMethodInformation: core.serialization.ObjectSchema<
    serializers.NextStepDisplayPaymentMethodInformation.Raw,
    Belvo.NextStepDisplayPaymentMethodInformation
> = core.serialization.object({
    type: core.serialization
        .lazy(async () => (await import("..")).NextStepDisplayPaymentMethodInformationType)
        .optional(),
    openFinanceDisplayPaymentMethodInformation: core.serialization.property(
        "open_finance_display_payment_method_information",
        core.serialization
            .lazyObject(async () => (await import("..")).DisplayPaymentMethodInformationContentOfpi)
            .optional()
    ),
    readyToConfirm: core.serialization.property("ready_to_confirm", core.serialization.boolean().optional()),
});

export declare namespace NextStepDisplayPaymentMethodInformation {
    interface Raw {
        type?: serializers.NextStepDisplayPaymentMethodInformationType.Raw | null;
        open_finance_display_payment_method_information?: serializers.DisplayPaymentMethodInformationContentOfpi.Raw | null;
        ready_to_confirm?: boolean | null;
    }
}
