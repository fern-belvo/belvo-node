/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as BelvoApi from "../../api";
import * as core from "../../core";

export const NextStepDisplayPaymentProcessing: core.serialization.ObjectSchema<
    serializers.NextStepDisplayPaymentProcessing.Raw,
    BelvoApi.NextStepDisplayPaymentProcessing
> = core.serialization.object({
    type: core.serialization.lazy(async () => (await import("..")).NextStepDisplayPaymentProcessingType).optional(),
    openFinanceDisplayPaymentProcessing: core.serialization.property(
        "open_finance_display_payment_processing",
        core.serialization.lazyObject(async () => (await import("..")).DisplayPaymentProcessing).optional()
    ),
    readyToConfirm: core.serialization.property("ready_to_confirm", core.serialization.boolean().optional()),
});

export declare namespace NextStepDisplayPaymentProcessing {
    interface Raw {
        type?: serializers.NextStepDisplayPaymentProcessingType.Raw | null;
        open_finance_display_payment_processing?: serializers.DisplayPaymentProcessing.Raw | null;
        ready_to_confirm?: boolean | null;
    }
}
