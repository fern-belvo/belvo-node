/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as BelvoApi from "../../api";
import * as core from "../../core";

export const PaymentInstitution: core.serialization.ObjectSchema<
    serializers.PaymentInstitution.Raw,
    BelvoApi.PaymentInstitution
> = core.serialization.object({
    id: core.serialization.string().optional(),
    active: core.serialization.boolean().optional(),
    name: core.serialization.string().optional(),
    displayName: core.serialization.property("display_name", core.serialization.string().optional()),
    legalEntityName: core.serialization.property("legal_entity_name", core.serialization.string().optional()),
    website: core.serialization.string().optional(),
    logo: core.serialization.string().optional(),
    iconLogo: core.serialization.property("icon_logo", core.serialization.string().optional()),
    textLogo: core.serialization.property("text_logo", core.serialization.string().optional()),
    primaryColor: core.serialization.property("primary_color", core.serialization.string().optional()),
    country: core.serialization.lazy(async () => (await import("..")).EnumPaymentsCountry).optional(),
    formFields: core.serialization.property(
        "form_fields",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).InstitutionFormField))
            .optional()
    ),
});

export declare namespace PaymentInstitution {
    interface Raw {
        id?: string | null;
        active?: boolean | null;
        name?: string | null;
        display_name?: string | null;
        legal_entity_name?: string | null;
        website?: string | null;
        logo?: string | null;
        icon_logo?: string | null;
        text_logo?: string | null;
        primary_color?: string | null;
        country?: serializers.EnumPaymentsCountry.Raw | null;
        form_fields?: serializers.InstitutionFormField.Raw[] | null;
    }
}
