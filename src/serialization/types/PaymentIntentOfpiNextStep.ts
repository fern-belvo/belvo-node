/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as BelvoApi from "../../api";
import * as core from "../../core";

export const PaymentIntentOfpiNextStep: core.serialization.Schema<
    serializers.PaymentIntentOfpiNextStep.Raw,
    BelvoApi.PaymentIntentOfpiNextStep
> = core.serialization.undiscriminatedUnion([
    core.serialization.lazyObject(async () => (await import("..")).NextStepDisplayPaymentMethodInformation),
    core.serialization.lazyObject(async () => (await import("..")).NextStepNeedsRedirect),
    core.serialization.lazyObject(async () => (await import("..")).NextStepDisplayConfirmationRequiredOfpi),
    core.serialization.lazyObject(async () => (await import("..")).NextStepDisplayPaymentProcessing),
    core.serialization.lazyObject(async () => (await import("..")).NextStepDisplayPaymentSucceeded),
    core.serialization.lazyObject(async () => (await import("..")).NextStepDisplayPaymentFailed),
]);

export declare namespace PaymentIntentOfpiNextStep {
    type Raw =
        | serializers.NextStepDisplayPaymentMethodInformation.Raw
        | serializers.NextStepNeedsRedirect.Raw
        | serializers.NextStepDisplayConfirmationRequiredOfpi.Raw
        | serializers.NextStepDisplayPaymentProcessing.Raw
        | serializers.NextStepDisplayPaymentSucceeded.Raw
        | serializers.NextStepDisplayPaymentFailed.Raw;
}
