/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Belvo from "../../api";
import * as core from "../../core";

export const RetentionBreakdown: core.serialization.ObjectSchema<
    serializers.RetentionBreakdown.Raw,
    Belvo.RetentionBreakdown
> = core.serialization.object({
    baseAmount: core.serialization.property("base_amount", core.serialization.number().optional()),
    taxType: core.serialization.property("tax_type", core.serialization.string().optional()),
    retainedAmount: core.serialization.property("retained_amount", core.serialization.number().optional()),
    paymentStatus: core.serialization.property(
        "payment_status",
        core.serialization.lazy(async () => (await import("..")).EnumTaxRetentionPaymentStatus).optional()
    ),
});

export declare namespace RetentionBreakdown {
    interface Raw {
        base_amount?: number | null;
        tax_type?: string | null;
        retained_amount?: number | null;
        payment_status?: serializers.EnumTaxRetentionPaymentStatus.Raw | null;
    }
}
