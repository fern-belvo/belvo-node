/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Belvo from "../../api";
import * as core from "../../core";

export const TaxComplianceStatus: core.serialization.ObjectSchema<
    serializers.TaxComplianceStatus.Raw,
    Belvo.TaxComplianceStatus
> = core.serialization.object({
    id: core.serialization.string().optional(),
    collectedAt: core.serialization.property("collected_at", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
    internalIdentification: core.serialization.property(
        "internal_identification",
        core.serialization.string().optional()
    ),
    pdf: core.serialization.string().optional(),
    rfc: core.serialization.string().optional(),
    outcome: core.serialization.lazy(async () => (await import("..")).EnumTaxComplianceStatusOutcome).optional(),
});

export declare namespace TaxComplianceStatus {
    interface Raw {
        id?: string | null;
        collected_at?: string | null;
        created_at?: string | null;
        internal_identification?: string | null;
        pdf?: string | null;
        rfc?: string | null;
        outcome?: serializers.EnumTaxComplianceStatusOutcome.Raw | null;
    }
}
