/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Belvo from "../../api";
import * as core from "../../core";

export const TaxDeclarationIndividual: core.serialization.ObjectSchema<
    serializers.TaxDeclarationIndividual.Raw,
    Belvo.TaxDeclarationIndividual
> = core.serialization.object({
    id: core.serialization.string(),
    link: core.serialization.string(),
    collectedAt: core.serialization.property("collected_at", core.serialization.string()),
    createdAt: core.serialization.property("created_at", core.serialization.string()),
    documentInformation: core.serialization.property(
        "document_information",
        core.serialization.lazyObject(async () => (await import("..")).DocumentInformationIndividual)
    ),
    taxPayerInformation: core.serialization.property(
        "tax_payer_information",
        core.serialization.lazyObject(async () => (await import("..")).TaxPayerInformationIndividual)
    ),
    equityStatement: core.serialization.property(
        "equity_statement",
        core.serialization.lazyObject(async () => (await import("..")).EquityStatementIndividual)
    ),
    annualIncomeStatement: core.serialization.property(
        "annual_income_statement",
        core.serialization.lazyObject(async () => (await import("..")).AnnualIncomeStatementIndividual)
    ),
    pensionIncomeStatement: core.serialization.property(
        "pension_income_statement",
        core.serialization.lazyObject(async () => (await import("..")).PensionIncomeStatementIndividual)
    ),
    taxAssessment: core.serialization.property(
        "tax_assessment",
        core.serialization.lazyObject(async () => (await import("..")).TaxAssessmentIndividual)
    ),
    dateIssued: core.serialization.property("date_issued", core.serialization.string()),
    pdf: core.serialization.string().optional(),
});

export declare namespace TaxDeclarationIndividual {
    interface Raw {
        id: string;
        link: string;
        collected_at: string;
        created_at: string;
        document_information: serializers.DocumentInformationIndividual.Raw;
        tax_payer_information: serializers.TaxPayerInformationIndividual.Raw;
        equity_statement: serializers.EquityStatementIndividual.Raw;
        annual_income_statement: serializers.AnnualIncomeStatementIndividual.Raw;
        pension_income_statement: serializers.PensionIncomeStatementIndividual.Raw;
        tax_assessment: serializers.TaxAssessmentIndividual.Raw;
        date_issued: string;
        pdf?: string | null;
    }
}
