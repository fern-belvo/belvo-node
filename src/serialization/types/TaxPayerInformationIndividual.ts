/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Belvo from "../../api";
import * as core from "../../core";

export const TaxPayerInformationIndividual: core.serialization.ObjectSchema<
    serializers.TaxPayerInformationIndividual.Raw,
    Belvo.TaxPayerInformationIndividual
> = core.serialization.object({
    firstLastName: core.serialization.property("first_last_name", core.serialization.string()),
    secondLastName: core.serialization.property("second_last_name", core.serialization.string()),
    firstName: core.serialization.property("first_name", core.serialization.string()),
    otherNames: core.serialization.property("other_names", core.serialization.string()),
    mainEconomicActivity: core.serialization.property("main_economic_activity", core.serialization.string()),
    documentId: core.serialization.property(
        "document_id",
        core.serialization.lazyObject(async () => (await import("..")).DocumentIdIndividual)
    ),
    reportingId: core.serialization.property(
        "reporting_id",
        core.serialization.lazyObject(async () => (await import("..")).ReportingId)
    ),
});

export declare namespace TaxPayerInformationIndividual {
    interface Raw {
        first_last_name: string;
        second_last_name: string;
        first_name: string;
        other_names: string;
        main_economic_activity: string;
        document_id: serializers.DocumentIdIndividual.Raw;
        reporting_id: serializers.ReportingId.Raw;
    }
}
