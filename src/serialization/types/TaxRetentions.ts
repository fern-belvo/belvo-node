/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as BelvoApi from "../../api";
import * as core from "../../core";

export const TaxRetentions: core.serialization.ObjectSchema<serializers.TaxRetentions.Raw, BelvoApi.TaxRetentions> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        link: core.serialization.string().optional(),
        collectedAt: core.serialization.property("collected_at", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.string().optional()),
        invoiceIdentification: core.serialization.property(
            "invoice_identification",
            core.serialization.string().optional()
        ),
        version: core.serialization.string().optional(),
        code: core.serialization.number().optional(),
        issuedAt: core.serialization.property("issued_at", core.serialization.string().optional()),
        certifiedAt: core.serialization.property("certified_at", core.serialization.string().optional()),
        cancelledAt: core.serialization.property("cancelled_at", core.serialization.string().optional()),
        senderId: core.serialization.property("sender_id", core.serialization.string().optional()),
        senderName: core.serialization.property("sender_name", core.serialization.string().optional()),
        receiverNationality: core.serialization.property(
            "receiver_nationality",
            core.serialization.lazy(async () => (await import("..")).EnumTaxRetentionReceiverNationality)
        ),
        receiverId: core.serialization.property("receiver_id", core.serialization.string().optional()),
        receiverName: core.serialization.property("receiver_name", core.serialization.string().optional()),
        totalInvoiceAmount: core.serialization.property("total_invoice_amount", core.serialization.number().optional()),
        totalExemptAmount: core.serialization.property("total_exempt_amount", core.serialization.number().optional()),
        totalRetainedAmount: core.serialization.property(
            "total_retained_amount",
            core.serialization.number().optional()
        ),
        totalTaxableAmount: core.serialization.property("total_taxable_amount", core.serialization.number().optional()),
        retentionBreakdown: core.serialization.property(
            "retention_breakdown",
            core.serialization
                .list(core.serialization.lazyObject(async () => (await import("..")).RetentionBreakdown))
                .optional()
        ),
        xml: core.serialization.string().optional(),
    });

export declare namespace TaxRetentions {
    interface Raw {
        id?: string | null;
        link?: string | null;
        collected_at?: string | null;
        created_at?: string | null;
        invoice_identification?: string | null;
        version?: string | null;
        code?: number | null;
        issued_at?: string | null;
        certified_at?: string | null;
        cancelled_at?: string | null;
        sender_id?: string | null;
        sender_name?: string | null;
        receiver_nationality: serializers.EnumTaxRetentionReceiverNationality.Raw;
        receiver_id?: string | null;
        receiver_name?: string | null;
        total_invoice_amount?: number | null;
        total_exempt_amount?: number | null;
        total_retained_amount?: number | null;
        total_taxable_amount?: number | null;
        retention_breakdown?: serializers.RetentionBreakdown.Raw[] | null;
        xml?: string | null;
    }
}
