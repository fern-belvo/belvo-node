/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Belvo from "../../api";
import * as core from "../../core";

export const TaxStatusDian: core.serialization.ObjectSchema<serializers.TaxStatusDian.Raw, Belvo.TaxStatusDian> =
    core.serialization.object({
        id: core.serialization.string(),
        link: core.serialization.string(),
        collectedAt: core.serialization.property("collected_at", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.string()),
        placeAndDateOfIssuance: core.serialization.property(
            "place_and_date_of_issuance",
            core.serialization.string().optional()
        ),
        officialName: core.serialization.property("official_name", core.serialization.string().optional()),
        idCif: core.serialization.property("id_cif", core.serialization.string().optional()),
        taxPayerInformation: core.serialization.property(
            "tax_payer_information",
            core.serialization.lazyObject(async () => (await import("..")).TaxStatusTaxPayerInformationDian)
        ),
        address: core.serialization.lazyObject(async () => (await import("..")).TaxStatusAddressDian),
        economicActivity: core.serialization.property(
            "economic_activity",
            core.serialization
                .list(core.serialization.lazyObject(async () => (await import("..")).TaxStatusEconomicActivityDian))
                .optional()
        ),
        regimes: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).TaxStatusRegimensDian))
            .optional(),
        obligations: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).TaxStatusObligationsDian))
            .optional(),
        digitalStamp: core.serialization.property("digital_stamp", core.serialization.string().optional()),
        digitalStampChain: core.serialization.property("digital_stamp_chain", core.serialization.string().optional()),
        pdf: core.serialization.string().optional(),
    });

export declare namespace TaxStatusDian {
    interface Raw {
        id: string;
        link: string;
        collected_at?: string | null;
        created_at: string;
        place_and_date_of_issuance?: string | null;
        official_name?: string | null;
        id_cif?: string | null;
        tax_payer_information: serializers.TaxStatusTaxPayerInformationDian.Raw;
        address: serializers.TaxStatusAddressDian.Raw;
        economic_activity?: serializers.TaxStatusEconomicActivityDian.Raw[] | null;
        regimes?: serializers.TaxStatusRegimensDian.Raw[] | null;
        obligations?: serializers.TaxStatusObligationsDian.Raw[] | null;
        digital_stamp?: string | null;
        digital_stamp_chain?: string | null;
        pdf?: string | null;
    }
}
