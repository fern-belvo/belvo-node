/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as BelvoApi from "../../api";
import * as core from "../../core";

export const TokenRequiredResponse: core.serialization.ObjectSchema<
    serializers.TokenRequiredResponse.Raw,
    BelvoApi.TokenRequiredResponse
> = core.serialization.object({
    code: core.serialization.string().optional(),
    message: core.serialization.string().optional(),
    requestId: core.serialization.property("request_id", core.serialization.string().optional()),
    session: core.serialization.string().optional(),
    expiry: core.serialization.number().optional(),
    link: core.serialization.string().optional(),
    tokenGenerationData: core.serialization.property(
        "token_generation_data",
        core.serialization
            .lazyObject(async () => (await import("..")).TokenRequiredResponseTokenGenerationData)
            .optional()
    ),
});

export declare namespace TokenRequiredResponse {
    interface Raw {
        code?: string | null;
        message?: string | null;
        request_id?: string | null;
        session?: string | null;
        expiry?: number | null;
        link?: string | null;
        token_generation_data?: serializers.TokenRequiredResponseTokenGenerationData.Raw | null;
    }
}
